Here's a rough draft of how things work

	ft8goblin (Main process)
		Provides a user interface for this mess.
		Supervises subprocess below:

	callsign-lookupd
		Looks up call signs via QRZ XML API and local FCC ULS database.
		Caches the results of lookups for fast recall, using sqlite3.
		- You can call it directly with a single argument (a
		  callsign) to look up a record on QRZ / ULS.

	decoderd-ft8
		Decodes FT4 and FT8 messages on various bands
		Listens for samples from sigcapd
		Sends output via stdio to parent (ft8goblin) for logging and
		display.

	encoderd-ft8
		Encodes FT4 and FT8 messages for transmission
		Sends messages via alsa/pulse to a rig controlled by hamlib
		Someday might support TX via gnuradio hardware?

	sigcapd
		Controls and captures samples from a radio and provides samples
		to decoderd-*, streamerd, etc

	streamerd
		Encodes a slice and sends it via FLAC compression to a user
		for decoding or waterfall display. (NYI)
