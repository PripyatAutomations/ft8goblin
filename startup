#!/bin/bash
# A simple wrapper to fixup path issues and start ft8goblin without installing...
#
# Pass -g if you want to open things in gdb
#

# Set a reasonable default for even ten year old machines...
[ -z "${NPROC}" ] && NPROC=8

# If -g option is passed, use GDB to help debug things
if [ "$1" == "-g" ]; then
   use_gdb=y
fi

# Add ./lib to the library search path
export LD_LIBRARY_PATH=./lib:${LD_LIBRARY_PATH}

# Some logging stuff
####################
# redirect gcc sanitizer outputs to files
extern ASAN_OPTIONS="log_path=logs/asan.log"
extern UBSAN_OPTIONS="log_path=logs/ubsan.log"

# Reset the tty
reset

# Clear old log files
rm -f logs/*.log

# Check if we haven't git pull'd in ${git_check_time}
git_check_time=3600

timestamp=$(date +%s)
last_timestamp=0
[ -f .git_timestamp ] && last_timestamp=$(cat .git_timestamp)
[ ! -f .git_timestamp ] && echo ${timestamp} > .git_timestamp

ts_diff=$((${timestamp}-${last_timestamp}))

echo "Last git pull was $ts_diff seconds ago. Automatic pull after $git_check_time seconds..."
if [ $ts_diff -gt $git_check_time ]; then
   # can we reach github?
   echo "Trying to ping github to see if it's reachable..."
   ping -c3 github.com
   if [ $? -eq 0 ]; then
      git pull || echo "Couldn't git pull.. Are you online? Try again later!"
      # save timestamp, so we won't try again for awhile...
      echo "${timestamp}" > .git_timestamp
   else
      echo "Can't ping github, skipping automatic 'git pull'. Try it manually!"
   fi
fi

# rebuild things or exit if failure
echo "Hang on, we need to compile things... This should only take a moment."
make clean || exit 2
make -j${NPROC} world || exit 1

# Start ft8goblin, if build was successful
if [ "${use_gdb}" == "y" ]; then
   gdb -e .gdbscript ./bin/ft8goblin
else
   ./bin/ft8goblin
fi

